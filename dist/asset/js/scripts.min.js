let cal_menu = document.getElementsByClassName('menu--calendar')
let cal_items = cal_menu[0].children
let cal_containers = document.getElementsByClassName('calendar__container')

for (var i = 0 ; i < cal_items.length ; i++) {
  cal_items[i].addEventListener("click", function(){
    item_click_cal(this, cal_items);
  });
}

function item_click_cal(element, cal_items) {
  let active = get_active_cal(cal_items);
  let container = element.dataset.action;
  
  if (!element.classList.contains('active')) {
    active.classList.remove('active');
    element.classList.add('active');
    toggle_container_cal(cal_containers, container);
  }
}

function get_active_cal(cal_items) {
  for (var i = 0 ; i < items.length ; i++) {
    if (cal_items[i].classList.contains('active')) {
      return cal_items[i];
    }
  }
}

function toggle_container_cal(cal_containers, container) {
  for (var i = 0 ; i < cal_containers.length ; i++) {
    cal_containers[i].style.display = 'none';
  }
  document.querySelectorAll("#" + container)[0].style.display = 'block';
}
let fullCitation = document.getElementsByClassName("citation__collapse")[0]
let buttons = document.getElementsByClassName('button')
let btnView

for (var btn of buttons) {
  if (btn.getAttribute('href') == "#citation-collapse") {
    btn.addEventListener('click', function() {
      btnView = this;
      this.style.display = 'none';
      fullCitation.style.display = 'block';
    });
  }
  if (btn.getAttribute('href') == "#citation-hide") {
    btn.addEventListener('click', function() {
      fullCitation.style.display = 'none';
      btnView.style.display = 'flex'
    });
  }
}
let menu = document.getElementsByClassName('menu--donation');
let items = menu[0].children;
let containers = document.getElementsByClassName('donation__container');

for (var i = 0 ; i < items.length ; i++) {
  items[i].addEventListener("click", function(){
    item_click(this, items);
  });
}

function item_click(element, items) {
  let active = get_active(items);
  let container = element.dataset.action;
  
  if (!element.classList.contains('active')) {
    active.classList.remove('active');
    element.classList.add('active');
    toggle_container(containers, container);
    set_data_in_graph(container)
  }
}

function get_active(items) {
  for (var i = 0 ; i < items.length ; i++) {
    if (items[i].classList.contains('active')) {
      return items[i];
    }
  }
}

function toggle_container(containers, container) {
  for (var i = 0 ; i < containers.length ; i++) {
    containers[i].style.display = 'none';
  }
  document.querySelectorAll("#" + container)[0].style.display = 'block';
}
let graph_data = {
  "ifi": {
    "value": [
      [250, 750, 1000],
      [1000, 750, 5000],
      [2500, 7500, 10000]
    ],
    "percent": 75,
  },
  "ir": {
    "value": [
      [51, 99, 150],
      [170, 330, 500],
      [340, 660, 1000]
    ],
    "percent": 66,
  },
  "is": {
    "value": [
      [4000, 6000, 10000],
      [8000, 12000, 20000],
      [12000, 18000, 30000]
    ],
    "percent": 60,
  }
}

let allProgress = document.getElementsByClassName('progress-circle');
let input = document.getElementById('custom_donation_input');
let labelPrimary = document.getElementById('custom_label_primary');
let labelSecondary = document.getElementById('custom_label_secondary');

function numberWithSpaces(x) {
  return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
}

function set_data_in_graph(data) {
  input.dataset['type'] = data;
  update_percent(data);
  for (var i = 0 ; i < allProgress.length ; i++) {
    for (var x = 0 ; x < 3 ; x++) {
      if (x < 2)
        allProgress[i].children[x].textContent = numberWithSpaces(graph_data[data]['value'][i][x]) + "€";
      else {
        if (i != 2)
          allProgress[i].children[x].lastElementChild.textContent = numberWithSpaces(graph_data[data]['value'][i][x]) + "€";
        else
          allProgress[i].children[x].lastElementChild.value = numberWithSpaces(graph_data[data]['value'][i][x]) + "€";
      }
    }
  }
}

function update_percent(data) {
  let percent = 100 - graph_data[data]['percent'];
  let new_percent = 565.48 - (565.48 * percent) / 100;
  for (var i = 0 ; i < allProgress.length ; i++) {
    allProgress[i].children[3].children[0].children[1].style.strokeDashoffset = new_percent;
  }
}

input.addEventListener('input', function() {
  let value_rest = 0;
  let value_real = 0;
  let type = input.dataset['type'];

  if (Number.isInteger(Number(input.value))) {
    value_real = (input.value / 100) * graph_data[type]['percent'];
    value_rest = (input.value / 100) * (100 - graph_data[type]['percent']);

    labelPrimary.textContent = numberWithSpaces(Math.floor(value_rest)) + "€";
    labelSecondary.textContent = numberWithSpaces(Math.floor(value_real)) + "€";
  }
});
let navbar = document.getElementsByClassName('navigation')[0];
let navbarOffset = navbar.offsetTop;

window.onscroll = function() {
  if (window.pageYOffset >= navbarOffset) {
    navbar.classList.add("nav-fixed")
  } else {
    navbar.classList.remove("nav-fixed");
  }
};

function toggle_navigation_bar() {
  let navigation = document.getElementsByClassName('navigation')[0];

  if (navigation.classList.contains('navigation--collapsed')) {
    navigation.classList.remove('navigation--collapsed');
    document.getElementById('nav-button').classList.add('button--little');
    navigation.children[2].style.display = 'none';
    document.body.style.overflow = 'hidden auto';
  } else {
    document.getElementById('nav-button').classList.remove('button--little');
    navigation.classList.add('navigation--collapsed');
    navigation.children[2].style.display = 'block';
    document.body.style.overflow = 'hidden';
  }
}
let width = window.innerWidth;
let rollover = document.getElementsByClassName('rollover');

for (var i = 0 ; i < rollover.length ; i++) {
  let text = rollover[i].dataset['text'];

  if (width < 640) {
    rollover[i].addEventListener('click', function() {
      this.insertAdjacentHTML('afterend', get_rollover(text));
      rollover_cross();
    });
  } else {
    rollover[i].addEventListener('mouseover', function() {
      this.insertAdjacentHTML('afterend', get_rollover(text));
      rollover_unhover();
    });
  }
}

function rollover_unhover() {
  let rollover_pop = document.getElementsByClassName('roll-over');

  for (var i = 0 ; i < rollover_pop.length ; i++) {
    rollover_pop[i].addEventListener('mouseout', function() {
      this.remove();
    });
  }
}

function rollover_cross() {
  let cross = document.getElementsByClassName('roll-over__cross');

  for (var i = 0 ; i < cross.length ; i++) {
    cross[i].addEventListener('click', function() {
      this.parentNode.remove();
    });
  }
}

function get_rollover(text) {
  let new_rollover = '<div class="roll-over">' +
  '<div class="roll-over__cross">' +
    '<div class="cross-bar"></div>' +
    '<div class="cross-bar"></div>' +
  '</div>' +
  '<span class="roll-over__text">' +
    text +
  '</span>' +
'</div>';
  return new_rollover;
}
//# sourceMappingURL=scripts.min.js.map